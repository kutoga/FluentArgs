pool:
  vmImage: 'Ubuntu 18.04'

trigger:
  batch: true
  branches:
    include: ['master', 'feature/*', 'fix/*']

variables:
  buildConfiguration: 'Release'
  sourceDirectory: '$(Build.SourcesDirectory)/source'
  docDirectory: '$(Build.SourcesDirectory)/doc'
  major: '0'
  minor: '9'
  patch: '1'

steps:
- script: dotnet tool install --global Paket --version 5.203.0
  displayName: Install Paket
  workingDirectory: $(sourceDirectory)

- script: dotnet restore ./FluentArgs.sln; echo ''
  displayName: Restore
  workingDirectory: $(sourceDirectory)

- script: dotnet build ./FluentArgs.sln --configuration $(buildConfiguration)
  displayName: Build
  workingDirectory: $(sourceDirectory)

- script: dotnet test ./FluentArgs.sln --configuration $(buildConfiguration) --logger trx
  displayName: Test
  workingDirectory: $(sourceDirectory)

- script: bash ./scripts/test_all_example_codes.sh
  displayName: Test example code snippets
  workingDirectory: $(docDirectory)

- script: bash ./doc/scripts/test_readme.sh
  displayName: Test README.md
  workingDirectory: $(Build.SourcesDirectory)

- task: PublishTestResults@2
  displayName: Publish Test Results
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

#- script: dotnet publish ./FluentArgs --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
#  displayName: Publish
#  workingDirectory: $(sourceDirectory)

- script: ~/.dotnet/tools/paket pack --version $(major).$(minor).$(patch) $(Build.ArtifactStagingDirectory)
  displayName: Create Package
  workingDirectory: $(sourceDirectory)/FluentArgs

- task: PublishBuildArtifacts@1
